apiVersion: v1
kind: Namespace
metadata:
  name: ldap
---
apiVersion: v1
kind: Secret
metadata:
  name: ldap-openldap
  namespace: ldap
  labels:
    app: openldap
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: YWRtaW4=
  LDAP_CONFIG_PASSWORD: Y29uZmln
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-openldap-customldif
  namespace: ldap
  labels:
    app: openldap
data:
  groups.ldif: |-
    dn: ou=People,dc=example,dc=org
    objectClass: organizationalUnit
    ou: People

    dn: cn=jane,ou=People,dc=example,dc=org
    objectClass: person
    objectClass: inetOrgPerson
    sn: doe
    cn: jane
    mail: janedoe@example.com
    userpassword: foo

    dn: ou=Groups,dc=example,dc=org
    objectClass: organizationalUnit
    ou: Groups

    dn: cn=admins,ou=Groups,dc=example,dc=org
    objectClass: groupOfNames
    cn: admins
    member: cn=jane,ou=People,dc=example,dc=org

    dn: cn=developers,ou=Groups,dc=example,dc=org
    objectClass: groupOfNames
    cn: developers
    member: cn=jane,ou=People,dc=example,dc=org	
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ldap-openldap-env
  namespace: ldap
  labels:
    app: openldap
data:
  LDAP_ADMIN_PASSWORD: admin
  LDAP_BACKEND: hdb
  LDAP_BASE_DN: dc=example,dc=org
  LDAP_DOMAIN: example.org
  LDAP_ORGANISATION: Example Org
  LDAP_READONLY_USER: "true"
  LDAP_READONLY_USER_PASSWORD: readonly
  LDAP_READONLY_USER_USERNAME: readonly
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
  LDAP_TLS: "false"
  LDAP_TLS_ENFORCE: "false"
---
# Source: openldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ldap-openldap
  namespace: ldap
  labels:
    app: openldap
spec:
  selector:
    app: openldap
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
---
# Source: openldap/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  ldap-openldap
  namespace: ldap
  labels:
    app: openldap
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap
  template:
    metadata:
      labels:
        app: openldap
    spec:
      initContainers:
      - name: openldap-init-ldif
        image: busybox
        command: ['sh', '-c', 'cp /customldif/* /ldifworkingdir']
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: customldif
          mountPath: /customldif
        - name: ldifworkingdir
          mountPath: /ldifworkingdir
        resources:
          {}
      containers:
      - name: openldap
        image: "osixia/openldap:1.2.4"
        imagePullPolicy: IfNotPresent
        args:
          - -l
          - info
          - --copy-service
        ports:
          - name: ldap-port
            containerPort: 389
          - name: ssl-ldap-port
            containerPort: 636
        envFrom:
          - configMapRef:
              name: ldap-openldap-env
          - secretRef:
              name: ldap-openldap
        volumeMounts:
          - name: data
            mountPath: /var/lib/ldap
            subPath: data
          - name: data
            mountPath: /etc/ldap/slapd.d
            subPath: config-data
          - name: ldifworkingdir
            mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
        env:
        livenessProbe:
          tcpSocket:
            port: ldap-port
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: ldap-port
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 10
        resources:
          {}
      volumes:
        - name: customldif
          configMap:
            name: ldap-openldap-customldif
        - name: ldifworkingdir
          emptyDir: {}
        - name: certs
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}